@using BingVoiceSystem.WebMVC.Models
@model RulesModel

@{
    ViewBag.Title = "Edit Rule";
}
@{var WildcardType = new List<SelectListItem>
{
    new SelectListItem { Text = "Movie", Value = "Movies" },
    new SelectListItem { Text = "Genre", Value = "Genres" },
    new SelectListItem { Text = "Actor", Value = "Actors" }
};
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit Rule</title>
</head>
<body>
    <h2>Edit Rule</h2>
    <hr />
    @if (Model.PendingRule != null && Model.PendingRule.RuleID != 0)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.PendingRule.RuleID)
            <table class="table table-bordered">
                <tr><td>@Html.LabelFor(x => x.PendingRule.Question, "Question")</td><td>@Html.TextAreaFor(x => x.PendingRule.Question, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.PendingRule.Answer, "Answer")</td><td>@Html.TextAreaFor(x => x.PendingRule.Answer, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.PendingRule.Lookup, "Wildcard Type")</td><td>@Html.DropDownListFor(x => x.PendingRule.Lookup, WildcardType, "- Not Data Driven -")</td></tr>
            </table>
            <p class="text-danger">@ViewBag.DuplicateError</p>

            <input type="submit" class="btn btn-primary" value="Save" style="padding-right: 10px" />
            @Html.ActionLink("Cancel", "RulesList", null, new { @class = "btn btn-default" });
        }
    }
    else if (Model.ApprovedRule != null && Model.ApprovedRule.RuleID != 0)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.ApprovedRule.RuleID)
            <table class="table table-bordered">
                <tr><td>@Html.LabelFor(x => x.ApprovedRule.Question, "Question")</td><td>@Html.TextAreaFor(x => x.ApprovedRule.Question, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.ApprovedRule.Answer, "Answer")</td><td>@Html.TextAreaFor(x => x.ApprovedRule.Answer, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.ApprovedRule.Lookup, "Wildcard Type")</td><td colspan="2">@Html.DropDownListFor(x => x.ApprovedRule.Lookup, WildcardType, "- Not Data Driven -")</td></tr>
            </table>
            <p class="text-danger">@ViewBag.DuplicateError</p>

            <input type="submit" class="btn btn-primary" value="Save" style="padding-right: 10px" />
            @Html.ActionLink("Cancel", "RulesList", null, new { @class = "btn btn-default" });
        }
    }
    else if (Model.RejectedRule != null && Model.RejectedRule.RuleID != 0)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.RejectedRule.RuleID)
            <table class="table table-bordered">
                <tr><td>@Html.LabelFor(x => x.RejectedRule.Question, "Question")</td><td>@Html.TextAreaFor(x => x.RejectedRule.Question, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.RejectedRule.Answer, "Answer")</td><td>@Html.TextAreaFor(x => x.RejectedRule.Answer, new { @class = "form-control", @rows = 5 })</td></tr>
                <tr><td>@Html.LabelFor(x => x.RejectedRule.Lookup, "Wildcard Type")</td><td colspan="2">@Html.DropDownListFor(x => x.RejectedRule.Lookup, WildcardType, "- Not Data Driven -")</td></tr>
            </table>
            <p class="text-danger">@ViewBag.DuplicateError</p>

            <input type="submit" class="btn btn-primary" value="Save" style="padding-right: 10px" />
            @Html.ActionLink("Cancel", "RulesList", null, new { @class = "btn btn-default" });
        }
    }
</body>
</html>